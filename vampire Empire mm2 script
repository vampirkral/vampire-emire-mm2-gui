--[[
    Ultra MM2 GUI | Gelişmiş ESP, Chams, Tracers ve 3 Farklı Silent Aim Sistemi (V23.0 - Silent Aim Edition)
    Eğitim ve test amaçlıdır!
    
    V23.0 Yenilikleri:
    🎯 [YENİ] 3 Farklı Silent Aim Sistemi:
        1. Classic Silent Aim - Kamerayı oynatmadan direkt hedefi vurma
        2. Predictive Silent Aim - Hareket eden hedefleri önceden tahmin etme
        3. Smart Silent Aim - Otomatik hedef seçimi ve akıllı nişan alma
    🛡️ [YENİ] Anti-Fling sistemi eklendi (Fling saldırılarından korunma).
    💥 [GELİŞTİRİLDİ] Fling sistemi optimize edildi
    🎯 [YENİ] Gelişmiş hedefleme sistemi ve daha akıllı ESP.
    🔧 [İYİLEŞTİRME] Performans optimizasyonları ve kod temizliği.
    🎨 [İYİLEŞTİRME] GUI tasarımı ve kullanıcı deneyimi geliştirildi.
    💾 [İYİLEŞTİRME] Ayar sistemi genişletildi ve daha stabil hale getirildi.
    🏃 [YENİ] Hareket Özellikleri (Hız, Sonsuz Zıplama, Noclip, Anti-Ragdoll)
--]]

-- Oyun Kimliği Kontrolü
if game.PlaceId ~= 142823291 then
    warn("Bu script sadece Murder Mystery 2'de (MM2) çalışır."); return
end

-- Oyunun Yüklenmesini Bekle
if not game:IsLoaded() then game.Loaded:Wait() end

-- === Servisler ===
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Stats = game:GetService("Stats")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TweenService = game:GetService("TweenService")
local VirtualUser = game:GetService("VirtualUser")

local localPlayer = Players.LocalPlayer
local camera = Workspace.CurrentCamera

-- === Yapılandırılabilir Ayarlar ===
local Config = {
    SilentAim = {
        -- Classic Silent Aim Ayarları
        ClassicEnabled = false,
        ClassicRange = 30,
        ClassicFOV = 90,
        
        -- Predictive Silent Aim Ayarları
        PredictiveEnabled = false,
        PredictiveRange = 35,
        PredictiveFOV = 120,
        PredictionTime = 0.15,
        VelocityMultiplier = 1.2,
        
        -- Smart Silent Aim Ayarları
        SmartEnabled = false,
        SmartRange = 40,
        SmartFOV = 150,
        AutoTargetSelection = true,
        PriorityMurderer = true,
        PrioritySheriff = false,
        IgnoreInnocents = true,
        
        -- Genel Ayarlar
        VisibleCheck = true,
        TeamCheck = true,
        WallCheck = false,
        SmoothAiming = true,
        SmoothSpeed = 0.8,
        ShowFOVCircle = false,
        FOVCircleColor = Color3.fromRGB(255, 255, 255),
        FOVCircleTransparency = 0.7
    },
    Prediction = {
        MinTime = 0.05,
        PingMultiplier = 1.2,
        VelocityMultiplier = 0.04,
        AimOffsetY = 0.7
    },
    Combat = {
        KillAuraRange = 12,
        AutoKnifeThrowRange = 25,
        ManualShootDelay = 0.5
    },
    ESP = {
        BoxTransparency = 0.3,
        NametagFontSize = 14,
        DistanceFontSize = 12,
        HealthBarEnabled = true,
        WeaponDisplayEnabled = true,
        PingDisplayEnabled = true,
        UpdateRate = 0.1,
        ChamsTransparency = 0.4,
        TracerThickness = 1.5
    },
    Crosshair = {
        Enabled = false,
        Type = "Dot",
        Color = Color3.fromRGB(255, 255, 255),
        Size = 5,
        Thickness = 1,
        AimColor = Color3.fromRGB(255, 0, 0)
    },
    Fling = {
        AntiVelocityThreshold = 100,
        FlingForce = Vector3.new(0, 5000, 0),
        FlingDirection = 2000,
        FlingDuration = 0.2,
        FlingCooldown = 1
    }
}

-- RemoteEvent isimleri
local POSSIBLE_REMOTE_EVENT_NAMES = {"RemoteEvent", "FireGun", "BulletEvent", "GunFire", "WeaponEvent", "MM2Event", "Shoot", "Fire", "Throw"}
local POSSIBLE_PICKUP_REMOTE_NAMES = {"PickupItem", "Collect", "ItemCollect", "GrabItem", "GiveItem", "ServerRemote"}

-- === Teleport Noktaları ===
local TELEPORT_LOCATIONS = {
    ["Lobi"] = Vector3.new(0, 5, 0),
    ["Silah Spawn 1"] = Vector3.new(20, 5, 10),
    ["Bıçak Spawn 1"] = Vector3.new(-15, 5, -20),
    ["Ortadaki Alan"] = Vector3.new(0, 10, 0),
    ["Çatı"] = Vector3.new(0, 50, 0),
}

-- === Değişkenler ===
local state = {
    speedValue = 250,
    jumpPowerValue = 50,
    espActive = false,
    chamsActive = false,
    tracersActive = false,
    speedActive = false,
    gunESPActive = false,
    killAuraActive = false,
    autoTPActive = false,
    autoCoinActive = false,
    antiAFKActive = false,
    finderActive = false,
    infJumpActive = false,
    noclipActive = false,
    autoShootActive = false,
    distanceESPActive = false,
    autoKnifeThrowActive = false,
    antiRagdollActive = false,
    customTeleportLocations = {},
    crosshairActive = false,
    antiFlingActive = false,
    flingPlayerName = "",
    flingActive = false,
    lastFlingTime = 0,
    
    -- Silent Aim States
    classicSilentAimActive = false,
    predictiveSilentAimActive = false,
    smartSilentAimActive = false,
    currentTarget = nil,
    lastTargetTime = 0
}

-- ESP Tabloları
local espData = {}
local itemESPIcons = {}
local lastESPUpdate = 0

-- Silent Aim Tabloları
local silentAimTargets = {}
local fovCircle = nil

-- Coroutine'ler ve Bağlantılar
local killAuraCoroutine, itemCollectorCoroutine, autoShootCoroutine, autoKnifeThrowCoroutine = nil, nil, nil, nil
local afkConnection, infJumpConnection, noclipConnection, antiRagdollConnection = nil, nil, nil, nil
local antiFlingConnection, flingConnection = nil, nil
local silentAimConnection = nil

-- GUI Elemanları
local mainFrame, finderFrame, fpsLabel, statsLabel, crosshairFrame = nil, nil, nil, nil, nil
local screenGui, espScreenGui
local flingPlayerTextBox = nil

-- Cache'ler
local cachedShootRemote = {remote = nil}
local cachedPickupRemote = {remote = nil}

-- İstatistikler
local currentKills = 0
local currentCoins = 0
local lastRole = "Innocent"

-- Keybinds
local keybinds = {
    ["toggle_gui"] = Enum.KeyCode.F4,
    ["manual_shoot"] = Enum.KeyCode.F5,
    ["kill_all"] = Enum.KeyCode.F6,
    ["toggle_esp"] = Enum.KeyCode.F7,
    ["toggle_crosshair"] = Enum.KeyCode.F8,
    ["toggle_anti_fling"] = Enum.KeyCode.F9,
    ["toggle_classic_silent_aim"] = Enum.KeyCode.F10,
    ["toggle_predictive_silent_aim"] = Enum.KeyCode.F11,
    ["toggle_smart_silent_aim"] = Enum.KeyCode.F12,
}

-- Performans için cache'lenmiş fonksiyonlar
local pcall = pcall
local ipairs = ipairs
local pairs = pairs
local math_floor = math.floor
local math_random = math.random
local math_clamp = math.clamp
local math_sqrt = math.sqrt
local math_atan2 = math.atan2
local math_deg = math.deg
local math_rad = math.rad
local math_sin = math.sin
local math_cos = math.cos
local string_format = string.format
local table_insert = table.insert
local table_sort = table.sort
local warn = warn
local task_wait = task.wait

-- === Yardımcı Fonksiyonlar ===
local function getRole(plr)
    if not plr or not plr.Character then return "Innocent" end
    if plr.Character:FindFirstChild("Gun", true) or plr.Backpack:FindFirstChild("Gun") then
        return "Sheriff"
    elseif plr.Character:FindFirstChild("Knife", true) or plr.Backpack:FindFirstChild("Knife") then
        return "Murderer"
    end
    return "Innocent"
end

local function getRoleColor(role)
    if role == "Murderer" then return Color3.fromRGB(255, 60, 60)
    elseif role == "Sheriff" then return Color3.fromRGB(80, 180, 255)
    elseif role == "Hero" then return Color3.fromRGB(0, 255, 0)
    else return Color3.fromRGB(220, 220, 220) end
end

local function getRoleEmoji(role)
    if role == "Murderer" then return "🔪"
    elseif role == "Sheriff" then return "🔫"
    elseif role == "Hero" then return "⭐"
    else return "🙂" end
end

local function getHumanoidRootPart(character)
    if not character then return nil end
    return character:FindFirstChild("HumanoidRootPart")
end

local function getDistance(pos1, pos2)
    return math_floor((pos1 - pos2).Magnitude)
end

local function findRemoteEvent(possibleNames, cacheTable, storage)
    if cacheTable.remote and cacheTable.remote.Parent then
        return cacheTable.remote
    end

    local searchLocations = {ReplicatedStorage, Workspace, Players, game:GetService("Lighting"), game:GetService("SoundService"), game:GetService("ProximityPromptService")}

    for _, eventName in ipairs(possibleNames) do
        for _, loc in ipairs(searchLocations) do
            local remoteEvent = loc:FindFirstChild(eventName, true)
            if remoteEvent and remoteEvent:IsA("RemoteEvent") then
                cacheTable.remote = remoteEvent
                warn("RemoteEvent bulundu: " .. eventName .. " konumunda: " .. loc.Name)
                return remoteEvent
            end
        end
        local foundInDescendants = game:FindFirstChild(eventName, true)
        if foundInDescendants and foundInDescendants:IsA("RemoteEvent") then
            cacheTable.remote = foundInDescendants
            warn("RemoteEvent bulundu (genel arama): " .. eventName .. " konumunda: " .. foundInDescendants.Parent.Name)
            return foundInDescendants
        end
    end
    warn("RemoteEvent bulunamadı. Denenen isimler: " .. table.concat(possibleNames, ", "))
    return nil
end

local function findPlayerByName(inputName)
    inputName = inputName:lower()
    for _, plr in ipairs(Players:GetPlayers()) do
        if plr.Name:lower():find(inputName) or (plr.DisplayName and plr.DisplayName:lower():find(inputName)) then
            return plr
        end
    end
    return nil
end

-- === Silent Aim Yardımcı Fonksiyonlar ===
local function worldToScreen(position)
    local screenPoint, onScreen = camera:WorldToScreenPoint(position)
    return Vector2.new(screenPoint.X, screenPoint.Y), onScreen
end

local function getScreenCenter()
    local viewportSize = camera.ViewportSize
    return Vector2.new(viewportSize.X / 2, viewportSize.Y / 2)
end

local function getAngleFromCenter(screenPos)
    local center = getScreenCenter()
    local deltaX = screenPos.X - center.X
    local deltaY = screenPos.Y - center.Y
    return math_sqrt(deltaX * deltaX + deltaY * deltaY)
end

local function isInFOV(targetPos, fovRadius)
    local screenPos, onScreen = worldToScreen(targetPos)
    if not onScreen then return false end
    
    local angleFromCenter = getAngleFromCenter(screenPos)
    return angleFromCenter <= fovRadius
end

local function raycast(origin, direction, distance)
    local raycastParams = RaycastParams.new()
    raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
    raycastParams.FilterDescendantsInstances = {localPlayer.Character}
    
    local raycastResult = Workspace:Raycast(origin, direction * distance, raycastParams)
    return raycastResult
end

local function isVisible(targetPos)
    if not Config.SilentAim.VisibleCheck then return true end
    
    local localHRP = getHumanoidRootPart(localPlayer.Character)
    if not localHRP then return false end
    
    local direction = (targetPos - localHRP.Position).Unit
    local distance = (targetPos - localHRP.Position).Magnitude
    
    local raycastResult = raycast(localHRP.Position, direction, distance)
    return raycastResult == nil
end

local function predictPosition(targetPlayer, predictionTime)
    local character = targetPlayer.Character
    if not character then return nil end
    
    local hrp = getHumanoidRootPart(character)
    if not hrp then return nil end
    
    local velocity = hrp.AssemblyLinearVelocity or Vector3.new(0, 0, 0)
    local currentPos = hrp.Position
    
    -- Pozisyon tahmini
    local predictedPos = currentPos + (velocity * predictionTime)
    return predictedPos
end
    -- Basit lineer tahmin
    local predictedPos = currentPos + (velocity * predictionTime)
    
    -- Yerçekimi etkisini hesaba kat
    local gravityEffect = Vector3.new(0, -196.2 * predictionTime * predictionTime * 0.5, 0)
    predictedPos = predictedPos + gravityEffect
    
    return predictedPos
end

local function getTargetPriority(targetPlayer)
    local role = getRole(targetPlayer)
    local priority = 0
    
    if role == "Murderer" and Config.SilentAim.PriorityMurderer then
        priority = priority + 100
    elseif role == "Sheriff" and Config.SilentAim.PrioritySheriff then
        priority = priority + 50
    elseif role == "Innocent" and Config.SilentAim.IgnoreInnocents then
        return -1 -- Ignore innocents
    end
    
    -- Mesafe faktörü (yakın hedefler daha yüksek öncelik)
    local localHRP = getHumanoidRootPart(localPlayer.Character)
    if localHRP and targetPlayer.Character then
        local targetHRP = getHumanoidRootPart(targetPlayer.Character)
        if targetHRP then
            local distance = (localHRP.Position - targetHRP.Position).Magnitude
            priority = priority + (100 - math.min(distance, 100))
        end
    end
    
    return priority
end

-- === Silent Aim Sistemleri ===

-- 1. Classic Silent Aim
local function classicSilentAim()
    if not state.classicSilentAimActive then return nil end
    
    local localHRP = getHumanoidRootPart(localPlayer.Character)
    if not localHRP then return nil end
    
    local bestTarget = nil
    local bestDistance = math.huge
    
    for _, player in ipairs(Players:GetPlayers()) do
        if player == localPlayer then continue end
        if not player.Character then continue end
        
        local targetHRP = getHumanoidRootPart(player.Character)
        if not targetHRP then continue end
        
        local distance = (localHRP.Position - targetHRP.Position).Magnitude
        if distance > Config.SilentAim.ClassicRange then continue end
        
        if not isInFOV(targetHRP.Position, Config.SilentAim.ClassicFOV) then continue end
        
        if Config.SilentAim.TeamCheck and getRole(player) == getRole(localPlayer) then continue end
        
        if not isVisible(targetHRP.Position) then continue end
        
        if distance < bestDistance then
            bestDistance = distance
            bestTarget = player
        end
    end
    
    if bestTarget then
        local targetHRP = getHumanoidRootPart(bestTarget.Character)
        if targetHRP then
            return targetHRP.Position + Vector3.new(0, Config.Prediction.AimOffsetY, 0)
        end
    end
    
    return nil
end

-- 2. Predictive Silent Aim
local function predictiveSilentAim()
    if not state.predictiveSilentAimActive then return nil end
    
    local localHRP = getHumanoidRootPart(localPlayer.Character)
    if not localHRP then return nil end
    
    local bestTarget = nil
    local bestDistance = math.huge
    
    for _, player in ipairs(Players:GetPlayers()) do
        if player == localPlayer then continue end
        if not player.Character then continue end
        
        local targetHRP = getHumanoidRootPart(player.Character)
        if not targetHRP then continue end
        
        local distance = (localHRP.Position - targetHRP.Position).Magnitude
        if distance > Config.SilentAim.PredictiveRange then continue end
        
        if not isInFOV(targetHRP.Position, Config.SilentAim.PredictiveFOV) then continue end
        
        if Config.SilentAim.TeamCheck and getRole(player) == getRole(localPlayer) then continue end
        
        -- Hareket eden hedefler için tahmin
        local velocity = targetHRP.AssemblyLinearVelocity or Vector3.new(0, 0, 0)
        if velocity.Magnitude < 5 then continue end -- Sadece hareket eden hedefler
        
        local predictedPos = predictPosition(player, Config.SilentAim.PredictionTime)
        if not predictedPos then continue end
        
        if not isVisible(predictedPos) then continue end
        
        if distance < bestDistance then
            bestDistance = distance
            bestTarget = player
        end
    end
    
    if bestTarget then
        local predictedPos = predictPosition(bestTarget, Config.SilentAim.PredictionTime)
        if predictedPos then
            return predictedPos + Vector3.new(0, Config.Prediction.AimOffsetY, 0)
        end
    end
    
    return nil
end

-- 3. Smart Silent Aim
local function smartSilentAim()
    if not state.smartSilentAimActive then return nil end
    
    local localHRP = getHumanoidRootPart(localPlayer.Character)
    if not localHRP then return nil end
    
    local targets = {}
    
    for _, player in ipairs(Players:GetPlayers()) do
        if player == localPlayer then continue end
        if not player.Character then continue end
        
        local targetHRP = getHumanoidRootPart(player.Character)
        if not targetHRP then continue end
        
        local distance = (localHRP.Position - targetHRP.Position).Magnitude
        if distance > Config.SilentAim.SmartRange then continue end
        
        if not isInFOV(targetHRP.Position, Config.SilentAim.SmartFOV) then continue end
        
        if Config.SilentAim.TeamCheck and getRole(player) == getRole(localPlayer) then continue end
        
        local priority = getTargetPriority(player)
        if priority < 0 then continue end
        
        if not isVisible(targetHRP.Position) then continue end
        
        table_insert(targets, {
            player = player,
            priority = priority,
            distance = distance,
            position = targetHRP.Position
        })
    end
    
    if #targets == 0 then return nil end
    
    -- Önceliğe göre sırala
    table_sort(targets, function(a, b)
        return a.priority > b.priority
    end)
    
    local bestTarget = targets[1]
    if bestTarget then
        state.currentTarget = bestTarget.player
        state.lastTargetTime = tick()
        
        -- Hareket tahminli pozisyon hesapla
        local predictedPos = predictPosition(bestTarget.player, Config.SilentAim.PredictionTime * Config.SilentAim.VelocityMultiplier)
        if predictedPos then
            return predictedPos + Vector3.new(0, Config.Prediction.AimOffsetY, 0)
        else
            return bestTarget.position + Vector3.new(0, Config.Prediction.AimOffsetY, 0)
        end
    end
    
    return nil
end

-- === Silent Aim Ana Fonksiyon ===
local function getSilentAimTarget()
    -- Öncelik sırası: Smart > Predictive > Classic
    local target = smartSilentAim()
    if target then return target end
    
    target = predictiveSilentAim()
    if target then return target end
    
    target = classicSilentAim()
    if target then return target end
    
    return nil
end

-- === FOV Circle ===
local function createFOVCircle()
    if fovCircle then
        fovCircle:Destroy()
    end
    
    if not Config.SilentAim.ShowFOVCircle then return end
    
    fovCircle = Drawing.new("Circle")
    fovCircle.Color = Config.SilentAim.FOVCircleColor
    fovCircle.Transparency = Config.SilentAim.FOVCircleTransparency
    fovCircle.Thickness = 2
    fovCircle.Filled = false
    fovCircle.Visible = true
    
    local center = getScreenCenter()
    fovCircle.Position = center
    
    -- En aktif olan Silent Aim'in FOV'unu kullan
    local fovRadius = 50
    if state.smartSilentAimActive then
        fovRadius = Config.SilentAim.SmartFOV
    elseif state.predictiveSilentAimActive then
        fovRadius = Config.SilentAim.PredictiveFOV
    elseif state.classicSilentAimActive then
        fovRadius = Config.SilentAim.ClassicFOV
    end
    
    fovCircle.Radius = fovRadius
end

local function updateFOVCircle()
    if not fovCircle or not Config.SilentAim.ShowFOVCircle then return end
    
    local center = getScreenCenter()
    fovCircle.Position = center
    
    -- Aktif Silent Aim varsa göster
    local anyActive = state.classicSilentAimActive or state.predictiveSilentAimActive or state.smartSilentAimActive
    fovCircle.Visible = anyActive
end

-- === Gelişmiş Ateş Etme Sistemi ===
local function enhancedShoot(targetPosition)
    local shootRemote = findRemoteEvent(POSSIBLE_REMOTE_EVENT_NAMES, cachedShootRemote)
    if not shootRemote then
        warn("Ateş etme RemoteEvent'i bulunamadı!")
        return false
    end
    
    local localHRP = getHumanoidRootPart(localPlayer.Character)
    if not localHRP then return false end
    
    -- Farklı RemoteEvent formatlarını dene
    local success = false
    
    -- Format 1: Pozisyon tabanlı
    pcall(function()
        shootRemote:FireServer(targetPosition)
        success = true
    end)
    
    if not success then
        -- Format 2: Yön tabanlı
        pcall(function()
            local direction = (targetPosition - localHRP.Position).Unit
            shootRemote:FireServer(direction)
            success = true
        end)
    end
    
    if not success then
        -- Format 3: Hedef oyuncu tabanlı
        pcall(function()
            local targetPlayer = state.currentTarget
            if targetPlayer then
                shootRemote:FireServer(targetPlayer)
                success = true
            end
        end)
    end
    
    if not success then
        -- Format 4: Kamera tabanlı (fallback)
        pcall(function()
            local lookDirection = camera.CFrame.LookVector
            shootRemote:FireServer(lookDirection)
            success = true
        end)
    end
    
    return success
end

-- === Silent Aim Ana Loop ===
local function silentAimLoop()
    if not (state.classicSilentAimActive or state.predictiveSilentAimActive or state.smartSilentAimActive) then
        return
    end
    
    local myRole = getRole(localPlayer)
    if myRole ~= "Sheriff" and myRole ~= "Hero" then return end
    
    local targetPosition = getSilentAimTarget()
    if not targetPosition then return end
    
    -- Smooth aiming
    if Config.SilentAim.SmoothAiming then
        local currentTime = tick()
        if state.lastTargetTime and (currentTime - state.lastTargetTime) < 0.1 then
            -- Yumuşak geçiş için interpolasyon
            local alpha = Config.SilentAim.SmoothSpeed
            local localHRP = getHumanoidRootPart(localPlayer.Character)
            if localHRP then
                local currentLook = camera.CFrame.LookVector
                local targetDirection = (targetPosition - camera.CFrame.Position).Unit
                local smoothDirection = currentLook:Lerp(targetDirection, alpha)
                targetPosition = camera.CFrame.Position + (smoothDirection * 100)
            end
        end
    end
    
    -- Otomatik ateş etme (isteğe bağlı)
    if state.autoShootActive then
        enhancedShoot(targetPosition)
    end
end

-- === Ayarlar Sistemi (Genişletilmiş) ===
local function loadSettings()
    -- Mevcut ayarlar...
    state.speedValue = localPlayer:GetAttribute("MM2_SpeedValue") or 250
    state.jumpPowerValue = localPlayer:GetAttribute("MM2_JumpPowerValue") or 50
    state.espActive = localPlayer:GetAttribute("MM2_ESPActive") or false
    state.chamsActive = localPlayer:GetAttribute("MM2_ChamsActive") or false
    state.tracersActive = localPlayer:GetAttribute("MM2_TracersActive") or false
    state.distanceESPActive = localPlayer:GetAttribute("MM2_DistanceESPActive") or false
    state.crosshairActive = localPlayer:GetAttribute("MM2_CrosshairActive") or false
    state.antiFlingActive = localPlayer:GetAttribute("MM2_AntiFlingActive") or false
    state.flingPlayerName = localPlayer:GetAttribute("MM2_FlingPlayerName") or ""
    state.flingActive = localPlayer:GetAttribute("MM2_FlingActive") or false
    state.speedActive = localPlayer:GetAttribute("MM2_SpeedActive") or false
    state.infJumpActive = localPlayer:GetAttribute("MM2_InfJumpActive") or false
    state.noclipActive = localPlayer:GetAttribute("MM2_NoclipActive") or false
    state.antiRagdollActive = localPlayer:GetAttribute("MM2_AntiRagdollActive") or false
    
    -- Silent Aim ayarları
    state.classicSilentAimActive = localPlayer:GetAttribute("MM2_ClassicSilentAim") or false
    state.predictiveSilentAimActive = localPlayer:GetAttribute("MM2_PredictiveSilentAim") or false
    state.smartSilentAimActive = localPlayer:GetAttribute("MM2_SmartSilentAim") or false
    
    Config.SilentAim.ClassicRange = localPlayer:GetAttribute("MM2_ClassicRange") or 30
    Config.SilentAim.ClassicFOV = localPlayer:GetAttribute("MM2_ClassicFOV") or 90
    Config.SilentAim.PredictiveRange = localPlayer:GetAttribute("MM2_PredictiveRange") or 35
    Config.SilentAim.PredictiveFOV = localPlayer:GetAttribute("MM2_PredictiveFOV") or 120
    Config.SilentAim.SmartRange = localPlayer:GetAttribute("MM2_SmartRange") or 40
    Config.SilentAim.SmartFOV = localPlayer:GetAttribute("MM2_SmartFOV") or 150
    Config.SilentAim.ShowFOVCircle = localPlayer:GetAttribute("MM2_ShowFOVCircle") or false
    Config.SilentAim.VisibleCheck = localPlayer:GetAttribute("MM2_VisibleCheck") or true
    Config.SilentAim.TeamCheck = localPlayer:GetAttribute("MM2_TeamCheck") or true
    Config.SilentAim.SmoothAiming = localPlayer:GetAttribute("MM2_SmoothAiming") or true
    Config.SilentAim.SmoothSpeed = localPlayer:GetAttribute("MM2_SmoothSpeed") or 0.8
    
    -- Diğer ayarlar...
    Config.ESP.BoxTransparency = localPlayer:GetAttribute("MM2_ESPBoxTransparency") or 0.3
    Config.ESP.NametagFontSize = localPlayer:GetAttribute("MM2_ESPNametagSize") or 14
    Config.ESP.DistanceFontSize = localPlayer:GetAttribute("MM2_ESPDistanceSize") or 12
    Config.ESP.HealthBarEnabled = localPlayer:GetAttribute("MM2_ESPHealthBar") or true
    Config.ESP.WeaponDisplayEnabled = localPlayer:GetAttribute("MM2_ESPWeaponDisplay") or true
    Config.ESP.PingDisplayEnabled = localPlayer:GetAttribute("MM2_ESPPingDisplay") or true
    
    Config.Crosshair.Type = localPlayer:GetAttribute("MM2_CrosshairType") or "Dot"
    Config.Crosshair.Color = localPlayer:GetAttribute("MM2_CrosshairColor") or Color3.fromRGB(255, 255, 255)
    Config.Crosshair.Size = localPlayer:GetAttribute("MM2_CrosshairSize") or 5
    Config.Crosshair.Thickness = localPlayer:GetAttribute("MM2_CrosshairThickness") or 1
    Config.Crosshair.AimColor = localPlayer:GetAttribute("MM2_CrosshairAimColor") or Color3.fromRGB(255, 0, 0)
    
    state.customTeleportLocations = localPlayer:GetAttribute("MM2_CustomTPLocs") or {}
    
    local loadedKeybinds = localPlayer:GetAttribute("MM2_Keybinds")
    if loadedKeybinds then
        for k, v in pairs(loadedKeybinds) do
            keybinds[k] = Enum.KeyCode[v] or keybinds[k]
        end
    end
end

local function saveSettings()
    -- Mevcut ayarlar...
    localPlayer:SetAttribute("MM2_SpeedValue", state.speedValue)
    localPlayer:SetAttribute("MM2_JumpPowerValue", state.jumpPowerValue)
    localPlayer:SetAttribute("MM2_ESPActive", state.espActive)
    localPlayer:SetAttribute("MM2_ChamsActive", state.chamsActive)
    localPlayer:SetAttribute("MM2_TracersActive", state.tracersActive)
    localPlayer:SetAttribute("MM2_DistanceESPActive", state.distanceESPActive)
    localPlayer:SetAttribute("MM2_CrosshairActive", state.crosshairActive)
    localPlayer:SetAttribute("MM2_AntiFlingActive", state.antiFlingActive)
    localPlayer:SetAttribute("MM2_FlingPlayerName", state.flingPlayerName)
    localPlayer:SetAttribute("MM2_FlingActive", state.flingActive)
    localPlayer:SetAttribute("MM2_SpeedActive", state.speedActive)
    localPlayer:SetAttribute("MM2_InfJumpActive", state.infJumpActive)
    localPlayer:SetAttribute("MM2_NoclipActive", state.noclipActive)
    localPlayer:SetAttribute("MM2_AntiRagdollActive", state.antiRagdollActive)
    
    -- Silent Aim ayarları
    localPlayer:SetAttribute("MM2_ClassicSilentAim", state.classicSilentAimActive)
    localPlayer:SetAttribute("MM2_PredictiveSilentAim", state.predictiveSilentAimActive)
    localPlayer:SetAttribute("MM2_SmartSilentAim", state.smartSilentAimActive)
    
    localPlayer:SetAttribute("MM2_ClassicRange", Config.SilentAim.ClassicRange)
    localPlayer:SetAttribute("MM2_ClassicFOV", Config.SilentAim.ClassicFOV)
    localPlayer:SetAttribute("MM2_PredictiveRange", Config.SilentAim.PredictiveRange)
    localPlayer:SetAttribute("MM2_PredictiveFOV", Config.SilentAim.PredictiveFOV)
    localPlayer:SetAttribute("MM2_SmartRange", Config.SilentAim.SmartRange)
    localPlayer:SetAttribute("MM2_SmartFOV", Config.SilentAim.SmartFOV)
    localPlayer:SetAttribute("MM2_ShowFOVCircle", Config.SilentAim.ShowFOVCircle)
    localPlayer:SetAttribute("MM2_VisibleCheck", Config.SilentAim.VisibleCheck)
    localPlayer:SetAttribute("MM2_TeamCheck", Config.SilentAim.TeamCheck)
    localPlayer:SetAttribute("MM2_SmoothAiming", Config.SilentAim.SmoothAiming)
    localPlayer:SetAttribute("MM2_SmoothSpeed", Config.SilentAim.SmoothSpeed)
    
    -- Diğer ayarlar...
    localPlayer:SetAttribute("MM2_ESPBoxTransparency", Config.ESP.BoxTransparency)
    localPlayer:SetAttribute("MM2_ESPNametagSize", Config.ESP.NametagFontSize)
    localPlayer:SetAttribute("MM2_ESPDistanceSize", Config.ESP.DistanceFontSize)
    localPlayer:SetAttribute("MM2_ESPHealthBar", Config.ESP.HealthBarEnabled)
    localPlayer:SetAttribute("MM2_ESPWeaponDisplay", Config.ESP.WeaponDisplayEnabled)
    localPlayer:SetAttribute("MM2_ESPPingDisplay", Config.ESP.PingDisplayEnabled)
    
    localPlayer:SetAttribute("MM2_CrosshairType", Config.Crosshair.Type)
    localPlayer:SetAttribute("MM2_CrosshairColor", Config.Crosshair.Color)
    localPlayer:SetAttribute("MM2_CrosshairSize", Config.Crosshair.Size)
    localPlayer:SetAttribute("MM2_CrosshairThickness", Config.Crosshair.Thickness)
    localPlayer:SetAttribute("MM2_CrosshairAimColor", Config.Crosshair.AimColor)
    
    localPlayer:SetAttribute("MM2_CustomTPLocs", state.customTeleportLocations)
    
    local serializableKeybinds = {}
    for k, v in pairs(keybinds) do
        serializableKeybinds[k] = v.Name
    end
    localPlayer:SetAttribute("MM2_Keybinds", serializableKeybinds)
end

-- === İstatistik Sistemi ===
local function updateStats()
    local currentRole = getRole(localPlayer)
    if currentRole ~= lastRole then
        lastRole = currentRole
        currentKills = 0
        currentCoins = 0
    end

    local statsText = string_format("Rol: %s | Öldürme: %d | Coin: %d", 
                                    currentRole, currentKills, currentCoins)
    if statsLabel then
        statsLabel.Text = statsText
    end
end

-- === Anti-Fling ve Fling Sistemi ===
local function antiFling()
    if not state.antiFlingActive then return end
    local hrp = localPlayer.Character and localPlayer.Character:FindFirstChild("HumanoidRootPart")
    if hrp then
        local velocity = hrp.AssemblyLinearVelocity or Vector3.new(0, 0, 0)
        if velocity.Magnitude > Config.Fling.AntiVelocityThreshold then
            hrp.AssemblyLinearVelocity = Vector3.new(0,0,0)
            hrp.AssemblyAngularVelocity = Vector3.new(0,0,0)
            hrp.CFrame = hrp.CFrame + Vector3.new(0, 0.1, 0) -- Hafifçe yukarı taşı
        end
    end
end

local function flingPlayer(targetPlayer)
    if not targetPlayer or not targetPlayer.Character then return end
    local hrp = getHumanoidRootPart(targetPlayer.Character)
    if not hrp then return end

    local currentTime = tick()
    if currentTime - state.lastFlingTime < Config.Fling.FlingCooldown then
        warn("Fling cooldown'da. Kalan süre: " .. string_format("%.1f", Config.Fling.FlingCooldown - (currentTime - state.lastFlingTime)) .. "s")
        return
    end

    local originalCFrame = hrp.CFrame
    local flingForce = Config.Fling.FlingForce
    local flingDirection = hrp.CFrame.LookVector * Config.Fling.FlingDirection

    local bv = Instance.new("BodyVelocity")
    bv.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
    bv.Velocity = flingForce + flingDirection
    bv.Parent = hrp

    game:GetService("Debris"):AddItem(bv, Config.Fling.FlingDuration)
    state.lastFlingTime = currentTime
    warn("Fling uygulandı: " .. targetPlayer.Name)
end

-- === Hareket Fonksiyonları ===
local function toggleSpeed(enabled)
    state.speedActive = enabled
    if localPlayer.Character and localPlayer.Character:FindFirstChildOfClass("Humanoid") then
        localPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed = enabled and state.speedValue or 16
    end
end

local function toggleInfJump(enabled)
    state.infJumpActive = enabled
    if infJumpConnection then
        infJumpConnection:Disconnect()
        infJumpConnection = nil
    end
    if enabled then
        infJumpConnection = UserInputService.InputBegan:Connect(function(input, gameProcessedEvent)
            if input.KeyCode == Enum.KeyCode.Space and not gameProcessedEvent then
                local humanoid = localPlayer.Character and localPlayer.Character:FindFirstChildOfClass("Humanoid")
                if humanoid then
                    humanoid.Jump = true
                end
            end
        end)
    end
end

local noclipBodyVelocity = nil
local function toggleNoclip(enabled)
    state.noclipActive = enabled
    local char = localPlayer.Character
    if not char then return end

    if noclipConnection then
        noclipConnection:Disconnect()
        noclipConnection = nil
    end
    
    if noclipBodyVelocity then
        noclipBodyVelocity:Destroy()
        noclipBodyVelocity = nil
    end

    for _, part in ipairs(char:GetDescendants()) do
        if part:IsA("BasePart") and part.CanCollide then
            part.CanCollide = not enabled
        end
    end

    if enabled then
        local hrp = getHumanoidRootPart(char)
        if hrp then
            noclipBodyVelocity = Instance.new("BodyVelocity")
            noclipBodyVelocity.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
            noclipBodyVelocity.Velocity = Vector3.new(0, 0, 0)
            noclipBodyVelocity.Parent = hrp
            
            noclipConnection = RunService.RenderStepped:Connect(function()
                if hrp and noclipBodyVelocity then
                    local moveVector = UserInputService:GetMoveVector()
                    local cameraCFrame = camera.CFrame
                    local forward = cameraCFrame.LookVector * moveVector.Z
                    local right = cameraCFrame.RightVector * moveVector.X
                    local newVelocity = (forward + right) * state.speedValue
                    
                    if UserInputService:IsKeyDown(Enum.KeyCode.Q) then
                        newVelocity = newVelocity - Vector3.new(0, state.speedValue, 0)
                    end
                    if UserInputService:IsKeyDown(Enum.KeyCode.E) then
                        newVelocity = newVelocity + Vector3.new(0, state.speedValue, 0)
                    end
                    
                    noclipBodyVelocity.Velocity = newVelocity
                end
            end)
        end
    end
end

local function toggleAntiRagdoll(enabled)
    state.antiRagdollActive = enabled
    if antiRagdollConnection then
        antiRagdollConnection:Disconnect()
        antiRagdollConnection = nil
    end

    if enabled then
        antiRagdollConnection = RunService.Heartbeat:Connect(function()
            local humanoid = localPlayer.Character and localPlayer.Character:FindFirstChildOfClass("Humanoid")
            if humanoid and humanoid.Sit then
                humanoid.Sit = false
            end
        end)
    end
end

-- === Gelişmiş ESP Sistemi ===
local function clearESP(plr)
    if espData[plr] then
        for _, obj in pairs(espData[plr]) do
            pcall(function() obj:Destroy() end)
        end
        espData[plr] = nil
    end
end

local function createOrUpdateBillboard(data, name, parent, properties)
    if not data[name] then
        data[name] = Instance.new("BillboardGui", parent)
        for propName, propValue in pairs(properties.instance) do
            data[name][propName] = propValue
        end
        
        local label = Instance.new("TextLabel", data[name])
        for propName, propValue in pairs(properties.label) do
            label[propName] = propValue
        end
    end
    return data[name], data[name].TextLabel
end

local function updateESPComponents(plr, hrp, role, roleColor, hum)
    local data = espData[plr]
    if not data then return end
    
    if state.espActive then
        if not data.box then
            data.box = Instance.new("BoxHandleAdornment", camera)
            data.box.AlwaysOnTop = true
            data.box.ZIndex = 10
            data.box.Size = Vector3.new(4, 6, 2)
        end
        data.box.Adornee = hrp
        data.box.Color3 = roleColor
        data.box.Transparency = Config.ESP.BoxTransparency
        data.box.Visible = true
    elseif data.box then
        data.box.Visible = false
    end

    local nametag, nameLabel = createOrUpdateBillboard(data, "nametag", espScreenGui, {
        instance = { Size = UDim2.new(0, 140, 0, 30), StudsOffset = Vector3.new(0, 3.5, 0), AlwaysOnTop = true },
        label = { Size = UDim2.new(1,0,1,0), BackgroundTransparency = 1, TextStrokeTransparency = 0.5, Font = Enum.Font.GothamSemibold }
    })
    nametag.Adornee = hrp
    nametag.Enabled = state.espActive
    if state.espActive then
        nameLabel.TextColor3 = roleColor
        nameLabel.Text = getRoleEmoji(role) .. " " .. plr.Name
        nameLabel.TextSize = Config.ESP.NametagFontSize
    end
    
    local distance, distLabel = createOrUpdateBillboard(data, "distance", espScreenGui, {
        instance = { Size = UDim2.new(0, 100, 0, 20), StudsOffset = Vector3.new(0, -2, 0), AlwaysOnTop = true },
        label = { Size = UDim2.new(1,0,1,0), BackgroundTransparency = 1, TextColor3 = Color3.fromRGB(255,255,255), TextStrokeTransparency = 0.5, Font = Enum.Font.Gotham }
    })
    distance.Adornee = hrp
    distance.Enabled = state.distanceESPActive
    if state.distanceESPActive and localPlayer.Character and getHumanoidRootPart(localPlayer.Character) then
        local distanceVal = getDistance(hrp.Position, getHumanoidRootPart(localPlayer.Character).Position)
        distLabel.Text = distanceVal .. "m"
        distLabel.TextSize = Config.ESP.DistanceFontSize
    end
    
    if Config.ESP.HealthBarEnabled and hum then
        local healthBar, healthLabel = createOrUpdateBillboard(data, "healthbar", espScreenGui, {
            instance = { Size = UDim2.new(0, 80, 0, 15), StudsOffset = Vector3.new(0, -3.5, 0), AlwaysOnTop = true },
            label = { Size = UDim2.new(1,0,1,0), BackgroundTransparency = 1, TextColor3 = Color3.fromRGB(0,255,0), TextStrokeTransparency = 0.5, Font = Enum.Font.Gotham }
        })
        healthBar.Adornee = hrp
        healthBar.Enabled = state.espActive
        if state.espActive then
            local healthPercent = math_floor((hum.Health / hum.MaxHealth) * 100)
            healthLabel.Text = "HP: " .. healthPercent .. "%"
            healthLabel.TextSize = 10
            if healthPercent > 75 then
                healthLabel.TextColor3 = Color3.fromRGB(0, 255, 0)
            elseif healthPercent > 25 then
                healthLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
            else
                healthLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
            end
        end
    end
end

local function updateChams(plr, char, roleColor)
    local data = espData[plr]
    if not data then return end

    if state.chamsActive then
        if not data.highlight then
            data.highlight = Instance.new("Highlight")
            data.highlight.Parent = char
        end
        data.highlight.Enabled = true
        data.highlight.Adornee = char
        data.highlight.DepthMode = Enum.HighlightDepthMode.Occluded
        data.highlight.FillColor = roleColor
        data.highlight.OutlineColor = roleColor
        data.highlight.FillTransparency = Config.ESP.ChamsTransparency
        data.highlight.OutlineTransparency = Config.ESP.ChamsTransparency / 2
    elseif data.highlight then
        data.highlight.Enabled = false
    end
end

local function updateTracer(plr, hrp, roleColor)
    local data = espData[plr]
    if not data then return end

    if state.tracersActive then
        local screenPos, onScreen = camera:WorldToScreenPoint(hrp.Position)
        if onScreen then
            if not data.tracer then
                data.tracer = Instance.new("Frame", espScreenGui)
                data.tracer.AnchorPoint = Vector2.new(0.5, 1)
                data.tracer.BorderSizePixel = 0
            end
            local startPos = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y)
            local diff = Vector2.new(screenPos.X, screenPos.Y) - startPos
            
            data.tracer.Visible = true
            data.tracer.Size = UDim2.new(0, diff.Magnitude, 0, Config.ESP.TracerThickness)
            data.tracer.Position = UDim2.fromOffset(startPos.X, startPos.Y)
            data.tracer.Rotation = math.deg(math.atan2(diff.Y, diff.X))
            data.tracer.BackgroundColor3 = roleColor
            data.tracer.BackgroundTransparency = 0.3
        elseif data.tracer then
            data.tracer.Visible = false
        end
    elseif data.tracer then
        data.tracer.Visible = false
    end
end

local function updatePlayerESP(plr)
    local char = plr.Character
    if plr == localPlayer or not char then clearESP(plr); return end
    
    local hrp = getHumanoidRootPart(char)
    local hum = char:FindFirstChildOfClass("Humanoid")
    if not hrp or not hum then clearESP(plr); return end
    
    if not espData[plr] then espData[plr] = {} end
    local role = getRole(plr)
    local roleColor = getRoleColor(role)
    
    updateESPComponents(plr, hrp, role, roleColor, hum)
    updateChams(plr, char, roleColor)
    updateTracer(plr, hrp, roleColor)
end

-- === Item ESP Sistemi ===
local function clearItemESP()
    for key, icon in pairs(itemESPIcons) do
        pcall(function() icon:Destroy() end)
    end
    itemESPIcons = {}
end

local function createItemESP(itemPart)
    if not itemPart or not itemPart:IsA("BasePart") or not itemPart.Parent then return end
    
    local icon = itemESPIcons[itemPart]
    if not icon then
        icon = Instance.new("BillboardGui", espScreenGui)
        icon.Size = UDim2.new(0, 50, 0, 50)
        icon.StudsOffset = Vector3.new(0, 2, 0)
        icon.AlwaysOnTop = true

        local nameLabel = Instance.new("TextLabel", icon)
        nameLabel.Size = UDim2.new(1, 0, 1, 0)
        nameLabel.BackgroundTransparency = 1
        nameLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
        nameLabel.TextStrokeTransparency = 0.5
        nameLabel.Font = Enum.Font.GothamBold
        nameLabel.TextScaled = true

        itemESPIcons[itemPart] = icon
    end
    icon.Adornee = itemPart

    local itemName = itemPart.Name
    local displayColor = Color3.fromRGB(255, 255, 255)

    if itemName == "GunDrop" then 
        displayColor = Color3.fromRGB(0, 255, 0)
        icon.TextLabel.Text = "🔫 SILAH"
    elseif itemName == "KnifeDrop" then 
        displayColor = Color3.fromRGB(255, 0, 0)
        icon.TextLabel.Text = "🔪 BIÇAK"
    elseif itemName == "Coin" then 
        displayColor = Color3.fromRGB(255, 215, 0)
        icon.TextLabel.Text = "💰 COIN"
    end

    icon.TextLabel.TextColor3 = displayColor
end

-- === Combat Sistemi ===
local function killAll()
    if getRole(localPlayer) ~= "Murderer" then 
        warn("[Kill All] Bu özelliği kullanmak için Katil olmalısınız."); 
        return 
    end
    
    local char = localPlayer.Character
    local hrp = getHumanoidRootPart(char)
    local knife = char:FindFirstChild("Knife", true) or localPlayer.Backpack:FindFirstChild("Knife")
    
    if not (char and hrp and knife) then 
        warn("[Kill All] Karakter, HRP veya Bıçak bulunamadı."); 
        return 
    end
    
    local originalCFrame = hrp.CFrame
    local killedCountThisRun = 0
    
    for _, plr in ipairs(Players:GetPlayers()) do
        if plr ~= localPlayer and plr.Character then
            local targetHum = plr.Character:FindFirstChildOfClass("Humanoid")
            local targetHrp = getHumanoidRootPart(plr.Character)
            
            if targetHum and targetHum.Health > 0 and targetHrp then
                local targetPos = targetHrp.CFrame * CFrame.new(0, 0, -math_random(2, 4))
                local success, err = pcall(function() hrp.CFrame = targetPos end)
                if not success then warn("[Kill All TP Hata] " .. tostring(err)); continue end
                
                task_wait(math_random(5, 10) / 100)
                
                local successActivate, errActivate = pcall(function() knife:Activate() end)
                
                if successActivate then
                    killedCountThisRun = killedCountThisRun + 1
                else
                    warn("[Kill All Hata] Bıçak aktive edilemedi: " .. tostring(errActivate))
                end
                
                task_wait(math_random(8, 12) / 100)
            end
        end
    end
    
    hrp.CFrame = originalCFrame
    currentKills = currentKills + killedCountThisRun
    updateStats()
    warn("[Kill All] Tamamlandı! " .. killedCountThisRun .. " oyuncu öldürüldü.")
end

    -- smartShootMurder fonksiyonu Silent Aim ile değiştirildi. Bu fonksiyon artık kullanılmıyor.
    -- Yerine enhancedShoot fonksiyonu kullanılmaktadır.

-- === GUI Sistemi ===
local function createGUI()
    screenGui = Instance.new("ScreenGui")
    screenGui.Name = "UltraMM2GUI"
    screenGui.Parent = localPlayer:WaitForChild("PlayerGui")
    screenGui.ResetOnSpawn = false
    
    espScreenGui = Instance.new("ScreenGui")
    espScreenGui.Name = "UltraMM2ESP"
    espScreenGui.Parent = localPlayer:WaitForChild("PlayerGui")
    espScreenGui.ResetOnSpawn = false
    
    mainFrame = Instance.new("Frame")
    mainFrame.Name = "MainFrame"
    mainFrame.Size = UDim2.new(0, 400, 0, 600)
    mainFrame.Position = UDim2.new(0, 50, 0, 50)
    mainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    mainFrame.BorderSizePixel = 0
    mainFrame.Active = true
    mainFrame.Draggable = true
    mainFrame.Parent = screenGui
    
    local mainCorner = Instance.new("UICorner")
    mainCorner.CornerRadius = UDim.new(0, 8)
    mainCorner.Parent = mainFrame
    
    local titleBar = Instance.new("Frame")
    titleBar.Name = "TitleBar"
    titleBar.Size = UDim2.new(1, 0, 0, 30)
    titleBar.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    titleBar.BorderSizePixel = 0
    titleBar.Parent = mainFrame
    
    local titleLabel = Instance.new("TextLabel")
    titleLabel.Name = "TitleLabel"
    titleLabel.Size = UDim2.new(1, 0, 1, 0)
    titleLabel.BackgroundTransparency = 1
    titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.TextSize = 18
    titleLabel.Text = "Ultra MM2 GUI"
    titleLabel.Parent = titleBar
    
    local closeButton = Instance.new("TextButton")
    closeButton.Name = "CloseButton"
    closeButton.Size = UDim2.new(0, 30, 1, 0)
    closeButton.Position = UDim2.new(1, -30, 0, 0)
    closeButton.BackgroundColor3 = Color3.fromRGB(255, 60, 60)
    closeButton.BorderSizePixel = 0
    closeButton.Text = "X"
    closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    closeButton.Font = Enum.Font.GothamBold
    closeButton.TextSize = 18
    closeButton.Parent = titleBar
    
    closeButton.MouseButton1Click:Connect(function()
        mainFrame.Visible = false
    end)
    
    local scrollFrame = Instance.new("ScrollingFrame")
    scrollFrame.Name = "ScrollFrame"
    scrollFrame.Size = UDim2.new(1, -20, 1, -40)
    scrollFrame.Position = UDim2.new(0, 10, 0, 35)
    scrollFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    scrollFrame.BorderSizePixel = 0
    scrollFrame.CanvasSize = UDim2.new(0, 0, 2, 0) -- Genişletilebilir
    scrollFrame.ScrollBarThickness = 6
    scrollFrame.Parent = mainFrame
    
    local listLayout = Instance.new("UIListLayout")
    listLayout.FillDirection = Enum.FillDirection.Vertical
    listLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
    listLayout.Padding = UDim.new(0, 5)
    listLayout.Parent = scrollFrame
    
    local function createToggle(name, text, stateVar, configTable, configKey, callback)
        local frame = Instance.new("Frame")
        frame.Name = name .. "Frame"
        frame.Size = UDim2.new(1, 0, 0, 30)
        frame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
        frame.BorderSizePixel = 0
        frame.Parent = scrollFrame
        
        local label = Instance.new("TextLabel")
        label.Size = UDim2.new(0.7, 0, 1, 0)
        label.BackgroundTransparency = 1
        label.TextColor3 = Color3.fromRGB(255, 255, 255)
        label.Font = Enum.Font.GothamSemibold
        label.TextSize = 14
        label.TextXAlignment = Enum.TextXAlignment.Left
        label.Text = text
        label.Parent = frame
        
        local toggleButton = Instance.new("TextButton")
        toggleButton.Name = name .. "Toggle"
        toggleButton.Size = UDim2.new(0.25, 0, 0.8, 0)
        toggleButton.Position = UDim2.new(0.72, 0, 0.1, 0)
        
        local currentStateValue = state[stateVar]
        if configTable and configKey then
            currentStateValue = configTable[configKey]
        end

        toggleButton.BackgroundColor3 = currentStateValue and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 60, 60)
        toggleButton.Text = currentStateValue and "ON" or "OFF"
        toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        toggleButton.Font = Enum.Font.GothamBold
        toggleButton.TextSize = 14
        toggleButton.Parent = frame
        
        toggleButton.MouseButton1Click:Connect(function()
            if configTable and configKey then
                configTable[configKey] = not configTable[configKey]
                toggleButton.BackgroundColor3 = configTable[configKey] and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 60, 60)
                toggleButton.Text = configTable[configKey] and "ON" or "OFF"
            else
                state[stateVar] = not state[stateVar]
                toggleButton.BackgroundColor3 = state[stateVar] and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 60, 60)
                toggleButton.Text = state[stateVar] and "ON" or "OFF"
            end
            if callback then callback(state[stateVar]) end
            saveSettings()
        end)
        return frame
    end

    local function createSlider(name, text, configTable, configKey, minVal, maxVal, step, displayFormat, callback)
        local frame = Instance.new("Frame")
        frame.Name = name .. "Frame"
        frame.Size = UDim2.new(1, 0, 0, 50)
        frame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
        frame.BorderSizePixel = 0
        frame.Parent = scrollFrame

        local label = Instance.new("TextLabel")
        label.Size = UDim2.new(1, 0, 0.4, 0)
        label.BackgroundTransparency = 1
        label.TextColor3 = Color3.fromRGB(255, 255, 255)
        label.Font = Enum.Font.GothamSemibold
        label.TextSize = 14
        label.TextXAlignment = Enum.TextXAlignment.Left
        label.Text = text .. ": " .. string_format(displayFormat, configTable[configKey])
        label.Parent = frame

        local slider = Instance.new("Frame")
        slider.Name = name .. "Slider"
        slider.Size = UDim2.new(1, -20, 0, 10)
        slider.Position = UDim2.new(0, 10, 0.6, 0)
        slider.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
        slider.BorderSizePixel = 0
        slider.Parent = frame

        local fill = Instance.new("Frame")
        fill.Name = "Fill"
        fill.Size = UDim2.new((configTable[configKey] - minVal) / (maxVal - minVal), 0, 1, 0)
        fill.BackgroundColor3 = Color3.fromRGB(0, 120, 255)
        fill.BorderSizePixel = 0
        fill.Parent = slider

        local handle = Instance.new("Frame")
        handle.Name = "Handle"
        handle.Size = UDim2.new(0, 15, 0, 20)
        handle.Position = UDim2.new(fill.Size.X.Scale, -7.5, 0, -5)
        handle.BackgroundColor3 = Color3.fromRGB(0, 180, 255)
        handle.BorderSizePixel = 0
        handle.Parent = slider
        handle.Active = true
        handle.Draggable = true

        local function updateSlider(newVal)
            local clampedVal = math_clamp(newVal, minVal, maxVal)
            configTable[configKey] = math_floor(clampedVal / step) * step
            fill.Size = UDim2.new((configTable[configKey] - minVal) / (maxVal - minVal), 0, 1, 0)
            handle.Position = UDim2.new(fill.Size.X.Scale, -7.5, 0, -5)
            label.Text = text .. ": " .. string_format(displayFormat, configTable[configKey])
            if callback then callback(configTable[configKey]) end
            saveSettings()
        end

        handle.Draggable = false -- Disable default draggable
        local isDragging = false
        handle.MouseButton1Down:Connect(function()
            isDragging = true
        end)
        UserInputService.InputEnded:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                isDragging = false
            end
        end)
        UserInputService.InputChanged:Connect(function(input)
            if isDragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                local mouseX = input.Position.X - slider.AbsolutePosition.X
                local ratio = math_clamp(mouseX / slider.AbsoluteSize.X, 0, 1)
                local newVal = minVal + ratio * (maxVal - minVal)
                updateSlider(newVal)
            end
        end)
        return frame
    end

    local function createButton(name, text, callback)
        local button = Instance.new("TextButton")
        button.Name = name .. "Button"
        button.Size = UDim2.new(1, 0, 0, 30)
        button.BackgroundColor3 = Color3.fromRGB(0, 120, 255)
        button.BorderSizePixel = 0
        button.Text = text
        button.TextColor3 = Color3.fromRGB(255, 255, 255)
        button.Font = Enum.Font.GothamBold
        button.TextSize = 14
        button.Parent = scrollFrame
        
        button.MouseButton1Click:Connect(callback)
        return button
    end

    local function createTextBox(name, text, stateVar, isNumber, callback)
        local frame = Instance.new("Frame")
        frame.Name = name .. "Frame"
        frame.Size = UDim2.new(1, 0, 0, 30)
        frame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
        frame.BorderSizePixel = 0
        frame.Parent = scrollFrame
        
        local label = Instance.new("TextLabel")
        label.Size = UDim2.new(0.5, 0, 1, 0)
        label.BackgroundTransparency = 1
        label.TextColor3 = Color3.fromRGB(255, 255, 255)
        label.Font = Enum.Font.GothamSemibold
        label.TextSize = 14
        label.TextXAlignment = Enum.TextXAlignment.Left
        label.Text = text
        label.Parent = frame
        
        local textBox = Instance.new("TextBox")
        textBox.Name = name .. "TextBox"
        textBox.Size = UDim2.new(0.45, 0, 0.8, 0)
        textBox.Position = UDim2.new(0.52, 0, 0.1, 0)
        textBox.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
        textBox.BorderSizePixel = 0
        textBox.Text = tostring(state[stateVar])
        textBox.TextColor3 = Color3.fromRGB(255, 255, 255)
        textBox.Font = Enum.Font.Gotham
        textBox.TextSize = 14
        textBox.Parent = frame
        
        textBox.FocusLost:Connect(function(enterPressed)
            if enterPressed then
                local value = textBox.Text
                if isNumber then
                    value = tonumber(value)
                    if value then
                        state[stateVar] = value
                    else
                        textBox.Text = tostring(state[stateVar]) -- Geçersiz giriş, eski değeri geri yükle
                    end
                else
                    state[stateVar] = value
                end
                if callback then callback(state[stateVar]) end
                saveSettings()
            end
        end)
        return frame, textBox
    end

    -- === Silent Aim Sekmesi ===
    local silentAimSection = Instance.new("Frame")
    silentAimSection.Name = "SilentAimSection"
    silentAimSection.Size = UDim2.new(1, 0, 0, 200) -- Yüksekliği ayarla
    silentAimSection.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    silentAimSection.BorderSizePixel = 0
    silentAimSection.Parent = scrollFrame

    local silentAimLayout = Instance.new("UIListLayout")
    silentAimLayout.FillDirection = Enum.FillDirection.Vertical
    silentAimLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
    silentAimLayout.Padding = UDim.new(0, 5)
    silentAimLayout.Parent = silentAimSection

    local silentAimTitle = Instance.new("TextLabel")
    silentAimTitle.Size = UDim2.new(1, 0, 0, 25)
    silentAimTitle.BackgroundTransparency = 1
    silentAimTitle.TextColor3 = Color3.fromRGB(0, 180, 255)
    silentAimTitle.Font = Enum.Font.GothamBold
    silentAimTitle.TextSize = 16
    silentAimTitle.Text = "SILENT AIM"
    silentAimTitle.Parent = silentAimSection

    createToggle("ClassicSilentAim", "Classic Silent Aim", "classicSilentAimActive", nil, nil, function(enabled)
        if enabled then
            state.predictiveSilentAimActive = false
            state.smartSilentAimActive = false
        end
        loadSettings() -- GUI'yi güncelle
        createFOVCircle()
    end)
    createSlider("ClassicRange", "Classic Range", Config.SilentAim, "ClassicRange", 10, 100, 1, "%.0f")
    createSlider("ClassicFOV", "Classic FOV", Config.SilentAim, "ClassicFOV", 10, 180, 1, "%.0f")

    createToggle("PredictiveSilentAim", "Predictive Silent Aim", "predictiveSilentAimActive", nil, nil, function(enabled)
        if enabled then
            state.classicSilentAimActive = false
            state.smartSilentAimActive = false
        end
        loadSettings() -- GUI'yi güncelle
        createFOVCircle()
    end)
    createSlider("PredictiveRange", "Predictive Range", Config.SilentAim, "PredictiveRange", 10, 150, 1, "%.0f")
    createSlider("PredictiveFOV", "Predictive FOV", Config.SilentAim, "PredictiveFOV", 10, 200, 1, "%.0f")

    createToggle("SmartSilentAim", "Smart Silent Aim", "smartSilentAimActive", nil, nil, function(enabled)
        if enabled then
            state.classicSilentAimActive = false
            state.predictiveSilentAimActive = false
        end
        loadSettings() -- GUI'yi güncelle
        createFOVCircle()
    end)
    createSlider("SmartRange", "Smart Range", Config.SilentAim, "SmartRange", 10, 200, 1, "%.0f")
    createSlider("SmartFOV", "Smart FOV", Config.SilentAim, "SmartFOV", 10, 250, 1, "%.0f")

    createToggle("ShowFOVCircle", "Show FOV Circle", nil, Config.SilentAim, "ShowFOVCircle", createFOVCircle)
    createToggle("VisibleCheck", "Visible Check", nil, Config.SilentAim, "VisibleCheck")
    createToggle("TeamCheck", "Team Check", nil, Config.SilentAim, "TeamCheck")
    createToggle("SmoothAiming", "Smooth Aiming", nil, Config.SilentAim, "SmoothAiming")
    createSlider("SmoothSpeed", "Smooth Speed", Config.SilentAim, "SmoothSpeed", 0.1, 1, 0.05, "%.2f")

    -- === ESP Sekmesi ===
    local espSection = Instance.new("Frame")
    espSection.Name = "ESPSection"
    espSection.Size = UDim2.new(1, 0, 0, 150) -- Yüksekliği ayarla
    espSection.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    espSection.BorderSizePixel = 0
    espSection.Parent = scrollFrame

    local espLayout = Instance.new("UIListLayout")
    espLayout.FillDirection = Enum.FillDirection.Vertical
    espLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
    espLayout.Padding = UDim.new(0, 5)
    espLayout.Parent = espSection

    local espTitle = Instance.new("TextLabel")
    espTitle.Size = UDim2.new(1, 0, 0, 25)
    espTitle.BackgroundTransparency = 1
    espTitle.TextColor3 = Color3.fromRGB(0, 180, 255)
    espTitle.Font = Enum.Font.GothamBold
    espTitle.TextSize = 16
    espTitle.Text = "ESP"
    espTitle.Parent = espSection

    createToggle("ESP", "Player ESP", "espActive", nil, nil, function(enabled)
        if not enabled then
            for _, data in pairs(espData) do
                if data.box then data.box.Visible = false end
                if data.nametag then data.nametag.Enabled = false end
                if data.healthbar then data.healthbar.Enabled = false end
            end
        end
    end)
    createToggle("Chams", "Chams", "chamsActive", nil, nil, function(enabled)
        if not enabled then
            for _, data in pairs(espData) do
                if data.highlight then data.highlight.Enabled = false end
            end
        end
    end)
    createToggle("Tracers", "Tracers", "tracersActive", nil, nil, function(enabled)
        if not enabled then
            for _, data in pairs(espData) do
                if data.tracer then data.tracer.Visible = false end
            end
        end
    end)
    createToggle("DistanceESP", "Distance ESP", "distanceESPActive", nil, nil, function(enabled)
        if not enabled then
            for _, data in pairs(espData) do
                if data.distance then data.distance.Enabled = false end
            end
        end
    end)
    createSlider("BoxTransparency", "Box Transparency", Config.ESP, "BoxTransparency", 0, 1, 0.05, "%.2f")
    createSlider("NametagFontSize", "Nametag Size", Config.ESP, "NametagFontSize", 8, 24, 1, "%.0f")
    createSlider("DistanceFontSize", "Distance Size", Config.ESP, "DistanceFontSize", 8, 24, 1, "%.0f")
    createToggle("HealthBar", "Health Bar", nil, Config.ESP, "HealthBarEnabled")
    createToggle("WeaponDisplay", "Weapon Display", nil, Config.ESP, "WeaponDisplayEnabled")
    createToggle("PingDisplay", "Ping Display", nil, Config.ESP, "PingDisplayEnabled")

    -- === Combat Sekmesi ===
    local combatSection = Instance.new("Frame")
    combatSection.Name = "CombatSection"
    combatSection.Size = UDim2.new(1, 0, 0, 100)
    combatSection.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    combatSection.BorderSizePixel = 0
    combatSection.Parent = scrollFrame

    local combatLayout = Instance.new("UIListLayout")
    combatLayout.FillDirection = Enum.FillDirection.Vertical
    combatLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
    combatLayout.Padding = UDim.new(0, 5)
    combatLayout.Parent = combatSection

    local combatTitle = Instance.new("TextLabel")
    combatTitle.Size = UDim2.new(1, 0, 0, 25)
    combatTitle.BackgroundTransparency = 1
    combatTitle.TextColor3 = Color3.fromRGB(0, 180, 255)
    combatTitle.Font = Enum.Font.GothamBold
    combatTitle.TextSize = 16
    combatTitle.Text = "COMBAT"
    combatTitle.Parent = combatSection

    createToggle("AutoShoot", "Auto Shoot (Sheriff)", "autoShootActive", nil, nil, function(enabled)
        if enabled then
            if not autoShootCoroutine then
                autoShootCoroutine = coroutine.wrap(function()
                    while state.autoShootActive do
                        silentAimLoop() -- Silent Aim ile entegre
                        task_wait(0.1)
                    end
                end)
                autoShootCoroutine()
            end
        else
            if autoShootCoroutine then
                autoShootCoroutine = nil
            end
        end
    end)
    createButton("KillAll", "Kill All (Murderer)", killAll)

    -- === Movement Sekmesi ===
    local movementSection = Instance.new("Frame")
    movementSection.Name = "MovementSection"
    movementSection.Size = UDim2.new(1, 0, 0, 150)
    movementSection.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    movementSection.BorderSizePixel = 0
    movementSection.Parent = scrollFrame

    local movementLayout = Instance.new("UIListLayout")
    movementLayout.FillDirection = Enum.FillDirection.Vertical
    movementLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
    movementLayout.Padding = UDim.new(0, 5)
    movementLayout.Parent = movementSection

    local movementTitle = Instance.new("TextLabel")
    movementTitle.Size = UDim2.new(1, 0, 0, 25)
    movementTitle.BackgroundTransparency = 1
    movementTitle.TextColor3 = Color3.fromRGB(0, 180, 255)
    movementTitle.Font = Enum.Font.GothamBold
    movementTitle.TextSize = 16
    movementTitle.Text = "MOVEMENT"
    movementTitle.Parent = movementSection

    createToggle("Speed", "Speed Hack", "speedActive", nil, nil, toggleSpeed)
    createTextBox("SpeedValue", "Speed Value", "speedValue", true, toggleSpeed)
    createToggle("InfJump", "Infinite Jump", "infJumpActive", nil, nil, toggleInfJump)
    createTextBox("JumpPowerValue", "Jump Power", "jumpPowerValue", true, function(val)
        if localPlayer.Character and localPlayer.Character:FindFirstChildOfClass("Humanoid") then
            localPlayer.Character:FindFirstChildOfClass("Humanoid").JumpPower = val
        end
    end)
    createToggle("Noclip", "Noclip", "noclipActive", nil, nil, toggleNoclip)
    createToggle("AntiRagdoll", "Anti Ragdoll", "antiRagdollActive", nil, nil, toggleAntiRagdoll)

    -- === Fling Sekmesi ===
    local flingSection = Instance.new("Frame")
    flingSection.Name = "FlingSection"
    flingSection.Size = UDim2.new(1, 0, 0, 100)
    flingSection.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    flingSection.BorderSizePixel = 0
    flingSection.Parent = scrollFrame

    local flingLayout = Instance.new("UIListLayout")
    flingLayout.FillDirection = Enum.FillDirection.Vertical
    flingLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
    flingLayout.Padding = UDim.new(0, 5)
    flingLayout.Parent = flingSection

    local flingTitle = Instance.new("TextLabel")
    flingTitle.Size = UDim2.new(1, 0, 0, 25)
    flingTitle.BackgroundTransparency = 1
    flingTitle.TextColor3 = Color3.fromRGB(0, 180, 255)
    flingTitle.Font = Enum.Font.GothamBold
    flingTitle.TextSize = 16
    flingTitle.Text = "FLING"
    flingTitle.Parent = flingSection

    local _, flingPlayerTextBoxRef = createTextBox("FlingPlayerName", "Target Player Name", "flingPlayerName", false)
    flingPlayerTextBox = flingPlayerTextBoxRef -- Global değişkene ata
    createToggle("Fling", "Fling Player", "flingActive", nil, nil, function(enabled)
        if enabled then
            local targetPlayer = findPlayerByName(state.flingPlayerName)
            if targetPlayer then
                flingPlayer(targetPlayer)
            else
                warn("Fling için hedef oyuncu bulunamadı: " .. state.flingPlayerName)
                state.flingActive = false -- Toggle'ı kapat
                loadSettings() -- GUI'yi güncelle
            end
        end
    end)
    createToggle("AntiFling", "Anti-Fling", "antiFlingActive", nil, nil, function(enabled)
        if enabled then
            if not antiFlingConnection then
                antiFlingConnection = RunService.Heartbeat:Connect(antiFling)
            end
        else
            if antiFlingConnection then
                antiFlingConnection:Disconnect()
                antiFlingConnection = nil
            end
        end
    end)

    -- === Teleport Sekmesi ===
    local tpSection = Instance.new("Frame")
    tpSection.Name = "TeleportSection"
    tpSection.Size = UDim2.new(1, 0, 0, 150)
    tpSection.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    tpSection.BorderSizePixel = 0
    tpSection.Parent = scrollFrame

    local tpLayout = Instance.new("UIListLayout")
    tpLayout.FillDirection = Enum.FillDirection.Vertical
    tpLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
    tpLayout.Padding = UDim.new(0, 5)
    tpLayout.Parent = tpSection

    local tpTitle = Instance.new("TextLabel")
    tpTitle.Size = UDim2.new(1, 0, 0, 25)
    tpTitle.BackgroundTransparency = 1
    tpTitle.TextColor3 = Color3.fromRGB(0, 180, 255)
    tpTitle.Font = Enum.Font.GothamBold
    tpTitle.TextSize = 16
    tpTitle.Text = "TELEPORT"
    tpTitle.Parent = tpSection

    for name, pos in pairs(TELEPORT_LOCATIONS) do
        createButton("TP_" .. name:gsub(" ", "_"), "TP: " .. name, function()
            local hrp = getHumanoidRootPart(localPlayer.Character)
            if hrp then
                hrp.CFrame = CFrame.new(pos)
            end
        end)
    end

    -- === Finder Sekmesi ===
    finderFrame = Instance.new("Frame")
    finderFrame.Name = "FinderFrame"
    finderFrame.Size = UDim2.new(0, 250, 0, 300)
    finderFrame.Position = UDim2.new(0.5, -125, 0.5, -150)
    finderFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    finderFrame.BorderSizePixel = 0
    finderFrame.Active = true
    finderFrame.Draggable = true
    finderFrame.Visible = false
    finderFrame.Parent = screenGui

    local finderCorner = Instance.new("UICorner")
    finderCorner.CornerRadius = UDim.new(0, 8)
    finderCorner.Parent = finderFrame

    local finderTitleBar = Instance.new("Frame")
    finderTitleBar.Name = "TitleBar"
    finderTitleBar.Size = UDim2.new(1, 0, 0, 30)
    finderTitleBar.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    finderTitleBar.BorderSizePixel = 0
    finderTitleBar.Parent = finderFrame

    local finderTitleLabel = Instance.new("TextLabel")
    finderTitleLabel.Name = "TitleLabel"
    finderTitleLabel.Size = UDim2.new(1, 0, 1, 0)
    finderTitleLabel.BackgroundTransparency = 1
    finderTitleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    finderTitleLabel.Font = Enum.Font.GothamBold
    finderTitleLabel.TextSize = 18
    finderTitleLabel.Text = "Player Finder"
    finderTitleLabel.Parent = finderTitleBar

    local finderCloseButton = Instance.new("TextButton")
    finderCloseButton.Name = "CloseButton"
    finderCloseButton.Size = UDim2.new(0, 30, 1, 0)
    finderCloseButton.Position = UDim2.new(1, -30, 0, 0)
    finderCloseButton.BackgroundColor3 = Color3.fromRGB(255, 60, 60)
    finderCloseButton.BorderSizePixel = 0
    finderCloseButton.Text = "X"
    finderCloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    finderCloseButton.Font = Enum.Font.GothamBold
    finderCloseButton.TextSize = 18
    finderCloseButton.Parent = finderTitleBar

    finderCloseButton.MouseButton1Click:Connect(function()
        finderFrame.Visible = false
    end)

    local finderTextBox = Instance.new("TextBox")
    finderTextBox.Name = "SearchTextBox"
    finderTextBox.Size = UDim2.new(1, -20, 0, 30)
    finderTextBox.Position = UDim2.new(0, 10, 0, 40)
    finderTextBox.PlaceholderText = "Oyuncu adı ara..."
    finderTextBox.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    finderTextBox.BorderSizePixel = 0
    finderTextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
    finderTextBox.Font = Enum.Font.Gotham
    finderTextBox.TextSize = 14
    finderTextBox.Parent = finderFrame

    local finderList = Instance.new("ScrollingFrame")
    finderList.Name = "PlayerList"
    finderList.Size = UDim2.new(1, -20, 1, -90)
    finderList.Position = UDim2.new(0, 10, 0, 80)
    finderList.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    finderList.BorderSizePixel = 0
    finderList.CanvasSize = UDim2.new(0, 0, 0, 0)
    finderList.ScrollBarThickness = 6
    finderList.Parent = finderFrame

    local finderListLayout = Instance.new("UIListLayout")
    finderListLayout.FillDirection = Enum.FillDirection.Vertical
    finderListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
    finderListLayout.Padding = UDim.new(0, 5)
    finderListLayout.Parent = finderList

    local function updateFinderList(searchText)
        for _, child in pairs(finderList:GetChildren()) do
            if child:IsA("TextButton") then
                child:Destroy()
            end
        end
        
        local foundPlayers = {}
        for _, plr in ipairs(Players:GetPlayers()) do
            if plr ~= localPlayer and (searchText == "" or plr.Name:lower():find(searchText:lower()) or (plr.DisplayName and plr.DisplayName:lower():find(searchText:lower()))) then
                table_insert(foundPlayers, plr)
            end
        end

        table_sort(foundPlayers, function(a, b)
            return a.Name < b.Name
        end)

        local contentHeight = 0
        for _, plr in ipairs(foundPlayers) do
            local playerButton = Instance.new("TextButton")
            playerButton.Size = UDim2.new(1, 0, 0, 25)
            playerButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
            playerButton.BorderSizePixel = 0
            playerButton.Text = getRoleEmoji(getRole(plr)) .. " " .. plr.Name .. " (" .. getRole(plr) .. ")"
            playerButton.TextColor3 = getRoleColor(getRole(plr))
            playerButton.Font = Enum.Font.Gotham
            playerButton.TextSize = 14
            playerButton.TextXAlignment = Enum.TextXAlignment.Left
            playerButton.Parent = finderList

            playerButton.MouseButton1Click:Connect(function()
                local hrp = getHumanoidRootPart(localPlayer.Character)
                local targetHrp = getHumanoidRootPart(plr.Character)
                if hrp and targetHrp then
                    hrp.CFrame = targetHrp.CFrame * CFrame.new(0, 0, -5) -- Hedefin önüne ışınla
                end
                finderFrame.Visible = false
            end)
            contentHeight = contentHeight + 25 + finderListLayout.Padding.Offset
        end
        finderList.CanvasSize = UDim2.new(0, 0, 0, contentHeight)
    end

    finderTextBox.Changed:Connect(function()
        updateFinderList(finderTextBox.Text)
    end)

    createButton("PlayerFinder", "Player Finder", function()
        finderFrame.Visible = not finderFrame.Visible
        if finderFrame.Visible then
            updateFinderList(finderTextBox.Text)
        end
    end)

    -- FPS ve İstatistik Label'ları
    fpsLabel = Instance.new("TextLabel")
    fpsLabel.Name = "FPSLabel"
    fpsLabel.Size = UDim2.new(0, 100, 0, 20)
    fpsLabel.Position = UDim2.new(1, -110, 0, 10)
    fpsLabel.BackgroundTransparency = 1
    fpsLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    fpsLabel.Font = Enum.Font.Gotham
    fpsLabel.TextSize = 12
    fpsLabel.TextXAlignment = Enum.TextXAlignment.Right
    fpsLabel.Parent = screenGui

    statsLabel = Instance.new("TextLabel")
    statsLabel.Name = "StatsLabel"
    statsLabel.Size = UDim2.new(0, 250, 0, 20)
    statsLabel.Position = UDim2.new(0, 10, 0, 10)
    statsLabel.BackgroundTransparency = 1
    statsLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    statsLabel.Font = Enum.Font.Gotham
    statsLabel.TextSize = 12
    statsLabel.TextXAlignment = Enum.TextXAlignment.Left
    statsLabel.Parent = screenGui

    -- Crosshair
    crosshairFrame = Instance.new("Frame")
    crosshairFrame.Name = "CrosshairFrame"
    crosshairFrame.Size = UDim2.new(0, 10, 0, 10)
    crosshairFrame.Position = UDim2.new(0.5, -5, 0.5, -5)
    crosshairFrame.BackgroundColor3 = Config.Crosshair.Color
    crosshairFrame.BorderSizePixel = 0
    crosshairFrame.Visible = Config.Crosshair.Enabled
    crosshairFrame.ZIndex = 10
    crosshairFrame.Parent = screenGui

    local crosshairCorner = Instance.new("UICorner")
    crosshairCorner.CornerRadius = UDim.new(0, 5)
    crosshairCorner.Parent = crosshairFrame

    local function updateCrosshair()
        if crosshairFrame then
            crosshairFrame.Visible = state.crosshairActive
            crosshairFrame.BackgroundColor3 = Config.Crosshair.Color
            if Config.Crosshair.Type == "Dot" then
                crosshairFrame.Size = UDim2.new(0, Config.Crosshair.Size, 0, Config.Crosshair.Size)
                crosshairCorner.CornerRadius = UDim.new(0, Config.Crosshair.Size / 2)
            else -- Default to Cross
                crosshairFrame.Size = UDim2.new(0, Config.Crosshair.Size * 2, 0, Config.Crosshair.Thickness)
                crosshairCorner.CornerRadius = UDim.new(0, 0)
            end
            crosshairFrame.Position = UDim2.new(0.5, -crosshairFrame.Size.X.Offset / 2, 0.5, -crosshairFrame.Size.Y.Offset / 2)
        end
    end
    updateCrosshair()

    createToggle("Crosshair", "Crosshair", "crosshairActive", nil, nil, updateCrosshair)
    createSlider("CrosshairSize", "Crosshair Size", Config.Crosshair, "Size", 1, 20, 1, "%.0f", updateCrosshair)
    createSlider("CrosshairThickness", "Crosshair Thickness", Config.Crosshair, "Thickness", 1, 5, 1, "%.0f", updateCrosshair)
    -- Renk seçici ekle (örnek olarak, basit bir RGB slider)
    -- Config.Crosshair.Color = Color3.fromRGB(R, G, B)

    -- Otomatik olarak GUI'yi aç
    mainFrame.Visible = true
end

-- === Ana Oyun Döngüsü ===
RunService.Heartbeat:Connect(function()
    -- FPS Güncelleme
    if fpsLabel then
        fpsLabel.Text = string_format("FPS: %d", math_floor(1 / RunService.Heartbeat:Wait()))
    end

    -- ESP Güncelleme
    if state.espActive or state.chamsActive or state.tracersActive or state.distanceESPActive then
        if tick() - lastESPUpdate > Config.ESP.UpdateRate then
            for _, plr in ipairs(Players:GetPlayers()) do
                updatePlayerESP(plr)
            end
            lastESPUpdate = tick()
        end
    else
        for _, plr in ipairs(Players:GetPlayers()) do
            clearESP(plr)
        end
    end

    -- Item ESP
    clearItemESP()
    for _, part in ipairs(Workspace:GetDescendants()) do
        if part.Name == "GunDrop" or part.Name == "KnifeDrop" or part.Name == "Coin" then
            createItemESP(part)
        end
    end

    -- Anti-Fling
    if state.antiFlingActive then
        antiFling()
    end

    -- Silent Aim Loop
    silentAimLoop()

    -- FOV Circle Update
    updateFOVCircle()
end)

-- Oyuncu Eklendi/Çıkarıldı
Players.PlayerAdded:Connect(function(plr)
    plr.CharacterAdded:Connect(function(char)
        updatePlayerESP(plr)
    end)
end)

Players.PlayerRemoving:Connect(function(plr)
    clearESP(plr)
end)

-- Karakter Yüklendiğinde
localPlayer.CharacterAdded:Connect(function(char)
    toggleSpeed(state.speedActive)
    toggleInfJump(state.infJumpActive)
    toggleNoclip(state.noclipActive)
    toggleAntiRagdoll(state.antiRagdollActive)
    
    local humanoid = char:FindFirstChildOfClass("Humanoid")
    if humanoid then
        humanoid.JumpPower = state.jumpPowerValue
    end
end)

-- Keybind İşleme
UserInputService.InputBegan:Connect(function(input, gameProcessedEvent)
    if gameProcessedEvent then return end

    if input.KeyCode == keybinds["toggle_gui"] then
        mainFrame.Visible = not mainFrame.Visible
    elseif input.KeyCode == keybinds["manual_shoot"] then
        smartShootMurder(Config.Combat.ManualShootDelay)
    elseif input.KeyCode == keybinds["kill_all"] then
        killAll()
    elseif input.KeyCode == keybinds["toggle_esp"] then
        state.espActive = not state.espActive
        saveSettings()
    elseif input.KeyCode == keybinds["toggle_crosshair"] then
        state.crosshairActive = not state.crosshairActive
        updateCrosshair()
        saveSettings()
    elseif input.KeyCode == keybinds["toggle_anti_fling"] then
        state.antiFlingActive = not state.antiFlingActive
        if state.antiFlingActive then
            if not antiFlingConnection then
                antiFlingConnection = RunService.Heartbeat:Connect(antiFling)
            end
        else
            if antiFlingConnection then
                antiFlingConnection:Disconnect()
                antiFlingConnection = nil
            end
        end
        saveSettings()
    elseif input.KeyCode == keybinds["toggle_classic_silent_aim"] then
        state.classicSilentAimActive = not state.classicSilentAimActive
        if state.classicSilentAimActive then
            state.predictiveSilentAimActive = false
            state.smartSilentAimActive = false
        end
        createFOVCircle()
        saveSettings()
    elseif input.KeyCode == keybinds["toggle_predictive_silent_aim"] then
        state.predictiveSilentAimActive = not state.predictiveSilentAimActive
        if state.predictiveSilentAimActive then
            state.classicSilentAimActive = false
            state.smartSilentAimActive = false
        end
        createFOVCircle()
        saveSettings()
    elseif input.KeyCode == keybinds["toggle_smart_silent_aim"] then
        state.smartSilentAimActive = not state.smartSilentAimActive
        if state.smartSilentAimActive then
            state.classicSilentAimActive = false
            state.predictiveSilentAimActive = false
        end
        createFOVCircle()
        saveSettings()
    end
end)

-- Başlangıç
loadSettings()
createGUI()
createFOVCircle()

-- İlk ESP güncellemesi
for _, plr in ipairs(Players:GetPlayers()) do
    updatePlayerESP(plr)
end

warn("Ultra MM2 GUI (V23.0 - Silent Aim Edition) yüklendi!")


